{
    "english": "It was not to them (not to Hugh, or Richard, or even to devoted Miss Brush) the liberator of the pent egotism, which is a strong martial woman, well nourished, well descended, of direct impulses, downright feelings, and little introspective power (broad and simple–why could not every one be broad and simple? she asked) feels rise within her, once youth is past, and must eject upon some object–it may be Emigration, it may be Emancipation; but whatever it be, this object round which the essence of her soul is daily secreted, becomes inevitably prismatic, lustrous, half looking glass, half precious stone; now carefully hidden in case people should sneer at it; now proudly displayed. She’s too young, it’s too late, we come apart, my arms are held, and the edges go dark and nothing is left but a little window, a very little window, like the wrong end of a telescope, like the window on a Christmas card, an old one, night and ice outside, and within a candle, a shining tree, a family, I can hear the bells even, sleigh bells, from the radio, old music, but through this window I can see, small but very clear, I can see her, going away from me, through the trees which are already turning, red and yellow, holding out her arms to me, being carried away.",
    "korean": [
        {
            "title": "저는 이러한 사람입니다.",
            "content": "'끈질긴 개발자' 이 단어가 이제 갓 신입 개발자가 되고자 하는 저를 표현하는 가장 좋은 단어인것 같습니다. 비전공자이기 때문에 아직 개발 경험이 많지 않지만 지금까지 스스로 프로젝트를 계획하고 무언가를 만들어볼 때, 항상 미리 요구사항을 수립하고 구현할 기능을 정의했습니다. 공부를 하면서 프로젝트를 제작했기 때문에 프로젝트 진도를 나가면서 항상 크고 작은 어려움에 부딪혔지만 끈질기게 구글링을 하거나 공식 문서도 참조도 해보았고, 정 해답이 나지 않을 경우는 개발자 커뮤니티에서 조언을 얻어보기도 한 결과, 개발에 있어서 모든 어려움은 포기하지 않으면 결국 극복할 수 있음을 좋은 경험치이자 교훈으로 얻을 수 있었습니다. 그렇게 문제들을 하나씩 핸들링해 해결할 때마다 개발에 대한 성취감을 얻을 수 있었고 결국 정의한 요구사항들을 모두 만족하고 프로젝트를 완성했을 때는 비록 스스로 이끌어나가는 프로젝트지만 큰 기쁨을 맛볼 수 있었습니다. 혼자 공부를 한 기간이 길다고 할 수는 없지만, 나태해지지 않고 계속 스스로 앞으로 나아가고자 한 원동력이 이러한 기쁨이지않을까 싶습니다. 또한, 배움에 갈망이 큰 개발자라고 말씀을 드리고 싶습니다. 학원을 다니고 스스로 공부를 하면서 코드단위의 로직을 이해하는 경험과 지식은 늘었지만, 그것과 비례하여 그 코드가 어떤 원리로 해석되고 실행되며, '그 코드로 연산을 하는 컴퓨터는 어떻게 동작할까'라는 의문은 점점 더 커졌습니다. 전공자도 아니며 기존에 컴퓨터에 지식이 전무한 상태라 그러한 지식이 없었기 때문에, 방송통신대학교 컴퓨터과학과에 편입학 하여 기본적인 CS 지식을 배우고 있습니다. 뿐만 아니라 프론트엔드 웹개발에 대한 기술 트렌드와 현황 역시 놓치지 말아야 할 것이라고 생각하기에 기술 유튜브 등을 구독, 활용하여 조금이나마 트렌드를 파악하고 이해하려는 노력을 하고 있습니다. 그러나 결국, 지금까지 제가 배워온 모든 것들은 앞으로 배우고 익혀야 할 것들의 10분의 1도 되지 않을 것이라고 생각합니다. 비록 갈 길이 멀지만 한 걸음씩 기초부터 나아가는 탄탄한 개발자가 되고자 합니다."
        },
        {
            "title": "협업과 커뮤니케이션 경험",
            "content": "제가 수료한 학원의 강사님께서 개발은 결국 혼자서 하는 것이 아니며 팀 단위로 끈끈한 소통이 이루어져야 한다고 말씀하셨습니다. 따라서 보통 폭포수 개발 모델을 사용하는 다른 강의와 달리 애자일 방식을 통한 개발을 교육하셨습니다. 강사님은 파이널 프로젝트에 애자일 방식을 도입한 개발 방식을 권유하셨고, 저희 조는 이를 수용하여 매주 특정 요일마다 스프린트 검토를 수행했고, 매일 마무리 작업 전 짧은 회의를 진행했습니다. 또한, 작업 단위를 잘게 쪼개어 잦은 커밋을 수행하고 충돌 코드에 대해 서로 리뷰를 하면서 커뮤니케이션을 진행했습니다. 하지만, 이러한 노력에도 불구하고 프로젝트 도중 수강을 철회한 수강생이 저의 조에서 나왔고 다른 한 수강생은 개인적인 사정으로 프로젝트를 진행하기 힘들어 보통 5, 6 명 씩 팀을 이루어 개발을 진행하는 다른 조들과 달리, 사실상 3 명이서 프로젝트를 수행해야 하는 어려움에 직면했습니다. 현실적으로 수료 전 프로젝트를 마무리해야 하는 제약이 있었기 때문에, 이러한 어려움들은 코드를 작성하고 기능을 구현하는 시간을 촉박하게 만들었고 결국 애자일의 가장 큰 의의인 잦은 커뮤니케이션을 원할하지않게 만들었습니다. 따라서 팀의 개발 형식이 애자일 모델에서 각자 빠르게 서로 맡은 부분을 소통 없이 개발해내는 폭포수모델로 바뀌기 시작했고 개발 상의 이슈와 어려움을 빠르게 공유하지 못해 오히려 개발 프로세스에 장애가 생기는 것을 체감했습니다. 조장이었던 팀원들에게 저는 기존보다 더 잦은 회의와 소통, 트렐로에 이슈와 핸들링 방법을 기술하고 어렵고 막히는 부분은 서로 자존심을 버리고 적극적으로 소통할 것을 권유했고 이에 대해 팀원들이 적극적으로 협조해준 덕분에 다시 원활하게 개발 작업이 이루어짐을 느꼈습니다. 비록, 인원과 시간의 문제로 기존보다 구현 기능을 몇 가지 줄이게 되었지만, 마감 기한에 맞추어 좋은 팀워크로 멋지게 프로젝트를 마감할 수 있었고 개발이라는 직무는 혼자 하는 것보다 적극적인 소통과 협업으로 이루어 나가는 것이 효과적이라는 좋은 경험을 얻을 수 있었습니다. 여기서 얻은 귀중한 경험으로 앞으로도 어디서 어떤 것을 개발하든 소통과 협업, 팀원 사이의 존중을 무엇보다 우선적으로 생각하는 개발자가 되는 것이 목표입니다."
        },
        {
            "title": "공식 문서를 중요시합니다.",
            "content": "'급할수록 돌아가라.' 라는 유명한 말이 있습니다. 이는 제가 이슈 핸들링에서 공식 문서가 아닌 블로그를 먼저 참고하고자 하는 유혹이 생길 때 스스로에게 하는 말입니다. 제가 프로그래밍을 배우기 시작할 때는 구글링을 통해 많은 이슈들을 해결하곤 했습니다. 구글링을 해서 나오는 이슈들은 대부분 블로그에 정리가 잘 되어있었고 초보인 저에게 많은 도움이 되었습니다. 블로그의 글들은 한국어로 설명이 되어있고, 편차가 있지만 공식문서보다 쉽게 풀어서 기술한 경우가 많기때문에 대부분의 에러 핸들링을 블로그를 참고해 수행했습니다. 하지만 기초적인 언어의 사용이 아닌 프레임워크나 라이브러리의 사용법에서 나오는 이슈들을 핸들링을 할 때는 작성자와 저의 개발 환경이 다르거나 사용 프레임워크 등의 버전이 다른 경우가 종종 있었고, 이러한 경우 블로그를 참고하는 것이 도움이 되지 않거나 오히려 더 심각한 문제가 발생하는 경우가 있었습니다. 비록 공식문서는 대부분 영어 또는 번역체에 딱딱한 설명문이 많아 이를 본능적으로 거부하게 되는 경향이 있었습니다. 그러나 이슈를 확실하게 짚고 넘어가려면 해당 이슈와 연관된 공식문서의 일부분이라도 읽어볼 것을 먼저 취업한 현업자분에게 권유받았고, 비록 처음에는 문서를 정독하고 이해하는데 조금 시간이 걸리지만  문서정독 유무에 따라 해당 기술을 사용하는데 이해하는 깊이가 달라짐을 체감할 수 있었습니다. 따라서 스스로 프로젝트를 수행하면서 이슈가 발생할 때마다 블로그의 글보다 문서를 읽어보고 개발 과정에 적용하려는 노력을 수행했으며 앞으로도 객관적인 자료를 무엇보다 우선시하는 개발자가 되고자 합니다."
        },
        {
            "title": "언제나 기록하는 개발자가 되고자합니다.",
            "content": "유명한 개발 블로거 중에 인상 깊은 블로그 제목을 가지신 분이 있습니다. '기억보다 기록을' 이라는 제목입니다. 솔직히 말해서 학원을 다니면서 매번 핸들링한 이슈와 지식을 기록한다는 것은 개인적으로 쉽지 않았습니다. 그러나 한 번 보고 이해했다고 착각하거나 나중에 비슷한 이슈가 생겨도 기억나겠지 이렇게 막연하게 생각한 이슈들은 결국 기억이 나지 않아 다시 저를 골치 아프게 하였고 기록의 필요성을 느끼게 해주었습니다. 따라서 개발이라는 넓은 바다 같은 분야에서 기록을 하는 행위는 내가 탄 배가 길을 잃지 않고 침몰하지 않도록 도와주는 항해 지침을 작성하는 것이 아닐까 생각해보게되었습니다. 이를 통하여 혼자 공부할 때, 개발 강의를 시청하면서 알게 된 내용들과 오랜 시간 동안 고민했던 문제들은 블로그에 정리를 해두기 시작했고 기록을 수행하면서 막연했던 지식들이 스스로 정리를 하며 내재화되고 학습과 기억에도 더 도움이 됨을 느낄 수 있었습니다. 괜히 많은 개발자들이 방문자 수와 글의 질을 떠나 꾸준히 정리글을 작성하는 것이 아니구나 느낄 수 있었던 경험이었다고 생각합니다. 또한, 특정 이슈에 대해 검색을 해보면 그 이슈에 관해 정말 많은 정보들이 나오는 것을 알 수 있습니다. 이는 개발 이슈라는 것은 특정 한 두 사람에만 공유되는 것이 아니며, 내가 맞닥뜨린 이슈와 어려움은 다른 사람에게도 충분히 발생할 수 있다고 생각했습니다. 따라서 구글링과 공식 문서에도 찾을 수 없거나 찾기 힘들었던 이슈 해결 방법들은 따로 기록을 해두어 공유하는 것이 매우 효과적일 것이라고 생각했고 글 작성 및 기록을 통해 이를 실천하였습니다. 앞으로 업무를 맡게 된다면 해당 업무 안에서 이슈와 핸들링에 대한 기록이 필수라고 생각하며, 팀 프로젝트를 수행하며 잘 정리된 기록이 얼마나 팀원들의 개발 속도와 질을 높일 수 있는지 직접 체감해본 경험이 있기 때문에 이러한 경험이 기록이라는 행위에 대한 좋은 동기부여가 되었다고 생각합니다."
        }
    ]
}
    